CREATE STREAM USER_EVENTS(USERID BIGINT, EVENT VARCHAR, DATA MAP<VARCHAR, VARCHAR>) WITH(
    KAFKA_TOPIC='user_events', VALUE_FORMAT='AVRO'
);

CREATE STREAM SERVICE_RECOMMENDATIONS(USERID BIGINT, MODEL VARCHAR, SERVICES ARRAY<BIGINT>) WITH(
    KAFKA_TOPIC = 'service_recommendations', VALUE_FORMAT='AVRO', KEY = 'MODEL'
);

-- TODO: CREATE THE 'USERS_INTERESTED_IN_INV' TABLE, WHICH WOULD STORE, IN 'DELIMTED' FORMAT, ON THE "users_interested"
-- TODO: TOPIC, ALL USERID'S FOR USERS WHO HAD AT LEAST 2 EVENTS OF TYPE 'CLICK' AND WITH "DATA" CONTAING THE "INVESTMENT"
-- TODO: AS "TARGET" IN THE "DATA" FIELD, DURING EACH 3 SECONDS (TUMBLING WINDOW)
CREATE TABLE USERS_INTERESTED_IN_INV WITH(
    KAFKA_TOPIC = 'users_interested', PARTITIONS = 2, VALUE_FORMAT = 'DELIMITED'
) AS SELECT USERID, COUNT(*) FROM USER_EVENTS
 WINDOW TUMBLING (SIZE 3 SECONDS)
 WHERE EVENT = 'CLICK' AND DATA['target'] = 'investment'
 GROUP BY USERID
 HAVING COUNT(*) >= 2;

-- TODO: RE-KEY THE DATA IN THE "service_recommendations" TOPIC TO PREPRE IT FOR THE JOIN WITH "USERS_INTERESTED_IN_INV"
-- TODO: AND STORE IT ON THE "recommendations_rekeyed" TOPIC
CREATE STREAM RECOMMENDATIONS_REKEYED WITH(
    KAFKA_TOPIC = 'recommendations_rekeyed', PARTITIONS = 2, VALUE_FORMAT = 'JSON'
) AS SELECT USERID, MODEL, SERVICES FROM SERVICE_RECOMMENDATIONS PARTITION BY USERID;

-- TODO: JOIN "USERS_INTERESTED_IN_INV" AND "RECOMMENDATIONS_REKEYED" TO PROVIDE A AN ARRAY OF RECOMMENDED SERVICES AS
-- TODO: "RECOMMNENDED_SERVICES" AND "USERID" IN A TABLE "USER_RECOMMENDATIONS" , STORED ON THE "user_recommendations"
-- TODO: TOPIC, IN 'AVRO' STORAGE FORMAT
CREATE TABLE USER_RECOMMENDATIONS WITH (
    KAFKA_TOPIC = 'user_recommendations', PARTITIONS = 2, VALUE_FORMAT = 'AVRO'
) AS SELECT u.USERDID, r.SERVICES FROM USERS_INTERESTED_IN_INV u JOIN RECOMMENDATIONS_REKEYED r ON u.USERID = r.USERID;

